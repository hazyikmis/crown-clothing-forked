{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.hoc.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","onClick","push","path","toUpperCase","filter","item","idx","map","key","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WithSpinnerHoc","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","inverted"],"mappings":"i2BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAU1BC,EAAiBF,IAAOG,GAAV,KAUdC,EAAmBJ,IAAOC,IAAV,KCIdI,eAfW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,UAAjC,OACxB,kBAACX,EAAD,KACE,kBAACG,EAAD,CAAgBS,QAAS,kBAAMH,EAAQI,KAAR,UAAgBH,EAAMI,KAAtB,YAA8BH,MAC1DJ,EAAMQ,eAET,kBAACV,EAAD,KACGG,EACEQ,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAAAF,GAAI,OACP,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,Y,oHClBvC,IAAMK,EAA+BrB,IAAOC,IAAV,KCgBnCqB,EAAkBC,YAAyB,CAC/CC,YAAaC,MAGAC,cAAQJ,EAARI,EAZa,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OAC1B,kBAACH,EAAD,KACGG,EAAYN,KAAI,gBAAGE,EAAH,EAAGA,GAAOO,EAAV,6BACf,kBAAC,EAAD,eAAmBR,IAAKC,GAAQO,WCLhCL,EAAkBC,YAAyB,CAC/CK,UAAWC,MASPR,EAA+BS,YACnCJ,YAAQJ,GACRS,IAFmCD,CAGnCE,GAEaX,a,gCCvBf,oJAEMY,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKX,eAGFC,EAA8BY,YACzC,CAACD,IACD,SAAAZ,GAAW,OAAIA,EAAcc,OAAOC,KAAKf,GAAaN,KAAI,SAAAC,GAAG,OAAIK,EAAYL,MAAQ,MAG1EqB,EAAmB,SAAAC,GAAkB,OAChDJ,YACE,CAACD,IACD,SAAAZ,GAAW,OAAIA,EAAcA,EAAYiB,GAAsB,SAGpDZ,EAA6BQ,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKO,cAOFC,EAA4BN,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKX,gB,oECtBJoB,IAJQ,SAACC,GAAD,OAAsB,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BAC7E,OAAOlB,EAAY,kBAAC,IAAD,MAAc,kBAACiB,EAAqBC,M,q+CCHlD,IAAMC,EAA0B/C,IAAOC,IAAV,KAkCvB+C,EAAYhD,YAAOiD,IAAPjD,CAAH,KAeTkD,EAAkBlD,IAAOC,IAAV,KAMN,gBAAGkD,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BpD,IAAOC,IAAV,KAQzBoD,EAAgBrD,IAAOsD,KAAV,KAKbC,EAAiBvD,IAAOsD,KAAV,KCvCZ5B,gBACb,MALyB,SAAA8B,GAAQ,MAAK,CACtCC,QAAS,SAAAzC,GAAI,OAAIwC,EAASC,YAAQzC,QAGrBU,EArBQ,SAAC,GAAuB,IAArBV,EAAoB,EAApBA,KAAMyC,EAAc,EAAdA,QACtBC,EAA0B1C,EAA1B0C,KAAMC,EAAoB3C,EAApB2C,MAAOR,EAAanC,EAAbmC,SAErB,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,KAAiBI,IAEnB,kBAACX,EAAD,CAAWrC,QAAS,kBAAM8C,EAAQzC,IAAO6C,UAAQ,GAAjD","file":"static/js/4.94067efb.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer\r\n} from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\n\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\r\n\r\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\r\n\r\nconst CollectionsOverview = ({ collections }) => (\r\n  <CollectionsOverviewContainer>\r\n    {collections.map(({ id, ...otherCollectionProps }) => (\r\n      <CollectionPreview key={id} {...otherCollectionProps} />\r\n    ))}\r\n  </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\r\nimport WithSpinner from \"../with-spinner/with-spinner.hoc.component\";\r\nimport CollectionsOverview from \"./collections-overview.component\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching,\r\n});\r\n\r\n//const CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview))\r\n//first WithSpinner wrapper works and provides us CollectionsOverviewWithSpinner\r\n//then connect works and connect this component to redux\r\n\r\n//rather than writing above, we can use compose from redux:\r\n//(compose works from right to left)\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n\r\n//BE CAREFUL: THIS CONTAINER TYPE OF COMPONENT DOES NOT\r\n//RENDER ANYTHING. THEY JUST PASS PROPS DOWN TO COMPONENTS","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\n  export const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n  )\r\n\r\n  //when you looking at \"http://localhost:3000/shop/womens\", if you refresh the page\r\n  //it throws an error. Because collection is null and it cannot de-structure\r\n  //the title and items in the collection.component.jsx\r\n  //In order to prevent that, we are gonna use the new selector below:\r\n  export const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections  //to be sure false or true to return\r\n  )","import React from \"react\";\r\n\r\n//import { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.hoc.styles\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst WithSpinnerHoc = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinnerHoc;\r\n\r\n/*\r\n//If the WithSpinnerHoc definition is not clear to you, lets make it clear like below:\r\nconst WithSpinnerHoc = (WrappedComponent) => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\n*/\r\n\r\n\r\n//NO REFERENCE TO THIS COMPONENT\r\n//After using lazy & Suspense and referring \"Spinner\" component as fallback","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n  \r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.7;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n"],"sourceRoot":""}